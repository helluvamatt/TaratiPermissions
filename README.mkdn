### TaratiPermissions
#### Tarati Permissions Manager Plugin for Bukkit

This plugin was custom written for the Tarati RP Server to bridge [Tarati Official Forums](http://tarati.schneenet.com) with Bukkit Minecraft Server Permissions.

On Tarati Minecraft, we use PermissionsEx to handle server permissions for the various commands and plugins. This plugin assigns permission groups for PermissionsEx based on forum rank. Since there are already excellent plugins which provide this functionality, I will attempt to explain why I feel the need to write a custom plugin.

###### Rationale

We use an excellent forum software package called Simple Machines Forums. We use the latest version (2.0 - Released June 16, 2011). The database backend keeps custom fields stored in such a way that fecthing a field for a particular user requires more than just a simple SELECT statement. This plugin is custom written to interface with this particular setup. It will be configurable, but initial versions will be hard coded for testing.

###### The Query

The SQL query that gets the user's group ID from a particular Minecraft IGN:

	SELECT  `smf_members`.`id_member` ,  `member_name` ,  `id_group` ,  `smf_themes`.`value`
	FROM  `smf_members`
	INNER JOIN  `smf_themes` ON  `smf_themes`.`id_member` =  `smf_members`.`id_member`
	AND  `smf_themes`.`variable` =  'cust_ign'
	WHERE  `smf_themes`.`value` =  '<IGN>'
	
###### Example Config

	bridge:
	    database:
	        uri: 'jdbc:mysql://localhost:3306/minecraft'
	        user: 'dbuser'
	        password: 'dbpassword'
	        # Forum users table
	        userTable: 'forum_users'
	        # User id col
	        userIdCol: 'user_id'
	        # Username col (NOT IGN)
	        userNameCol: 'username'
	        # In-Game Name column
	        ignCol: 'custom_ign'
	        # Group ID column
	        groupIdCol: 'group_id'
	        # Custom lookup query*
	        customlookupquery: ''
	    # Groups - define group information here
	    groups:
			# Group name
		    Admins:
				# Forum group id
		        gid: 0
		        # If whitelist.enable is true, is this group whitelisted?
		        whitelist: true
		    Moderators:
		        gid: 1
		        whitelist: true
		    Members:
		        gid: 2
		        whitelist: true
	    whitelist:
		    # Use the white list (kick users whose groups have whitelist: false or users that are not registered)
	        enable: true
	    kickmessage:
			# Message to give to users who are kicked because they are not registered on the forum
	        notregistered: 'Please register on our forum to play on our server!'
	        # Message to give to users who are kicked because their group is not white listed.
	        groupnotallowed: 'You are not allowed on our server at this time!'
